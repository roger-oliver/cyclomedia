{"version":3,"sources":["components/appBar/AppBar.tsx","components/drawer/Drawer.tsx","components/main/Main.tsx","components/map/Map.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppBar","drawerOpen","drawerWidth","theme","handleDrawerOpen","StyledAppBar","styled","MuiAppBar","shouldForwardProp","prop","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","position","Toolbar","IconButton","color","aria-label","onClick","edge","sx","mr","display","Menu","Typography","variant","noWrap","component","AppDrawer","handleDrawerClose","DrawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","Drawer","flexShrink","boxSizing","anchor","direction","ChevronLeft","ChevronRight","Divider","List","map","text","index","ListItem","button","ListItemIcon","Inbox","Mail","ListItemText","primary","Main","children","MainContent","flexGrow","MapContext","React","createContext","undefined","proj4","defs","register","extent","MapComponent","props","mapDivRef","state","createRef","this","current","openStreetMap","TileLayer","source","OSM","vectorSource","VectorSource","format","GeoJSON","url","strategy","bboxStrategy","vectorLayer","VectorLayer","style","Style","stroke","Stroke","nlVectorSource","Vector","nlVectorLayer","scaleLineControl","ScaleLine","units","minWidth","bar","steps","overViewMapControl","OverviewMap","tipLabel","layers","mousePositionControl","MousePosition","coordinateFormat","createStringXY","projection","mapContext","Map","target","view","View","center","zoom","controls","defaults","attribution","extend","setState","className","ref","Provider","value","PureComponent","App","useTheme","useState","setOpen","Box","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aef09dd1.chunk.js","sourcesContent":["import { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport { IconButton, Toolbar, Typography } from '@mui/material';\nimport {\n  Menu as MenuIcon,\n} from '@mui/icons-material';\nimport type { AppBarProps } from './AppBar.d'\n\nconst AppBar: React.FC<AppBarProps> = ({ drawerOpen, drawerWidth, theme, handleDrawerOpen }) => {\n\n\n  const StyledAppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })<any>(({ theme, open, drawerWidth }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: `${drawerWidth}px`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <StyledAppBar position=\"fixed\" open={drawerOpen} drawerWidth={drawerWidth} theme={theme}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          sx={{ mr: 2, ...(drawerOpen && { display: 'none' }) }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap component=\"div\">\n          Cyclomedia Test\n        </Typography>\n      </Toolbar>\n    </StyledAppBar>\n  );\n};\n\nexport default AppBar;\n","import { styled } from '@mui/material/styles';\nimport {\n  Drawer,\n  IconButton,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material';\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  ChevronRight as ChevronRightIcon,\n  Inbox as InboxIcon,\n  Mail as MailIcon\n} from '@mui/icons-material';\nimport type { DrawerSet } from './Drawer.d';\n\nconst AppDrawer: React.FC<DrawerSet> = ({ drawerWidth, drawerOpen, handleDrawerClose, theme }) => {\n  \n  const DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }));\n  return (\n    <Drawer\n    sx={{\n      width: drawerWidth,\n      flexShrink: 0,\n      '& .MuiDrawer-paper': {\n        width: drawerWidth,\n        boxSizing: 'border-box',\n      },\n    }}\n    variant=\"persistent\"\n    anchor=\"left\"\n    open={drawerOpen}\n  >\n    <DrawerHeader>\n      <IconButton onClick={handleDrawerClose}>\n        {theme.direction === 'ltr' ? (\n          <ChevronLeftIcon />\n        ) : (\n          <ChevronRightIcon />\n        )}\n      </IconButton>\n    </DrawerHeader>\n    <Divider />\n    <List>\n      {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>\n            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <List>\n      {['All mail', 'Trash', 'Spam'].map((text, index) => (\n        <ListItem button key={text}>\n          <ListItemIcon>\n            {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n          </ListItemIcon>\n          <ListItemText primary={text} />\n        </ListItem>\n      ))}\n    </List>\n  </Drawer>\n  );\n};\n\nexport default AppDrawer;","import { styled } from '@mui/material/styles';\nimport type { MainSet } from './Main.d';\n\n\nconst Main: React.FC<MainSet> = ({ theme, drawerOpen, drawerWidth, children }) => {\n\n  const MainContent = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n    open?: boolean; drawerWidth: number;\n  }>(({ theme, open, drawerWidth }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }));\n\n  const DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }));\n\n  return (\n    <MainContent open={drawerOpen} theme={theme} drawerWidth={drawerWidth}>\n      <DrawerHeader theme={theme} />\n        {children}\n    </MainContent>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport { MapProps, MapState, IMapContext } from './Map.d';\nimport View from 'ol/View';\nimport OSM from 'ol/source/OSM';\nimport Map from 'ol/Map';\nimport {Tile as TileLayer} from 'ol/layer';\nimport 'ol/ol.css';\nimport \"./map.css\";\n\nimport proj4 from 'proj4';\nimport {register} from 'ol/proj/proj4';\n\nimport GeoJSON from 'ol/format/GeoJSON';\nimport VectorSource from 'ol/source/Vector';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy';\nimport {Vector as VectorLayer} from 'ol/layer';\nimport {Stroke, Style} from 'ol/style';\nimport Vector from 'ol/source/Vector';\n\nimport { ScaleLine, OverviewMap, defaults, MousePosition } from 'ol/control';\nimport {createStringXY} from 'ol/coordinate';\n\nexport const MapContext = React.createContext<IMapContext | void>(undefined);\n\nproj4.defs(\"EPSG:28992\",\"+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725 +units=m +no_defs\");\n\nregister(proj4);\n\nconst extent = [846.36, 268975.28, 288050.82, 636456.31];\n\nexport class MapComponent extends React.PureComponent<MapProps, MapState> {\n  private mapDivRef: React.RefObject<HTMLDivElement>;\n  state: MapState = {};\n\n  constructor(props: MapProps) {\n    super(props);\n    this.mapDivRef = React.createRef<HTMLDivElement>();\n  }\n\n  componentDidMount() {\n    if (!this.mapDivRef.current) {\n      return;\n    }\n\n    const openStreetMap = new TileLayer({\n      source: new OSM()\n    })\n\n    const vectorSource = new VectorSource({\n      format: new GeoJSON(),\n      url: function (extent) {\n        return (\n          'https://geodata.nationaalgeoregister.nl/bag/wfs/v1_1?service=WFS&request=GetFeature&typeName=bag:woonplaats&count=100&startIndex=0&outputFormat=json&version=2.0.0'\n        );\n      },\n      strategy: bboxStrategy,\n    });\n\n    const vectorLayer = new VectorLayer({\n      source: vectorSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: 'rgba(0, 0, 255, 1.0)',\n          width: 2,\n        }),\n      }),\n    });\n\n    const nlVectorSource = new Vector({\n      format: new GeoJSON(),\n      url: './data/geojson/netherlands.geojson',\n\n    });\n\n    const nlVectorLayer = new VectorLayer({\n      source: nlVectorSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: 'rgba(0, 0, 0, 1.0)',\n          width: 2,\n        }),\n      }),\n    });\n\n    const scaleLineControl = new ScaleLine({\n      units: 'metric',\n      minWidth: 200,\n      bar: true,\n      steps: 4,\n      text: true\n    });\n  \n    const overViewMapControl = new OverviewMap({\n      tipLabel: 'Netherlands Overview Map',\n      layers: [\n        new TileLayer({\n          source: new OSM()\n        })\n      ]\n    });\n\n    const mousePositionControl = new MousePosition({\n      coordinateFormat: createStringXY(4),\n      projection: 'EPSG:28992',\n\n    });\n\n    const map = new Map({\n      layers: [ openStreetMap, vectorLayer, nlVectorLayer ],\n      target: this.mapDivRef.current,\n      view: new View({\n        center: [142892.19, 470783.87],\n        zoom: 1,\n        projection: 'EPSG:28992',\n        extent: extent,\n      }),\n      controls: defaults({attribution: false}).extend([scaleLineControl, overViewMapControl, mousePositionControl])\n    });\n\n    const mapContext: IMapContext = { map };\n    this.setState({\n      mapContext: mapContext,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"map\" ref={this.mapDivRef}>\n        {this.state.mapContext && (\n          <MapContext.Provider value={this.state.mapContext}>\n            <div></div>\n          </MapContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n","import { Box, CssBaseline } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport React, { useState } from 'react';\nimport './App.css';\nimport AppBar from './components/appBar/AppBar';\nimport AppDrawer from './components/drawer/Drawer';\nimport Main from './components/main/Main';\nimport { Map } from './components/map'\n\nfunction App() {\n\n  const drawerWidth = 240;\n\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar drawerOpen={open} drawerWidth={drawerWidth} theme={theme} handleDrawerOpen={handleDrawerOpen}/>\n        <AppDrawer drawerOpen={open} drawerWidth={drawerWidth} theme={theme} handleDrawerClose={handleDrawerClose} />\n        <Main drawerOpen={open} drawerWidth={drawerWidth} theme={theme} handleDrawerClose={handleDrawerClose}>\n          <Map />\n        </Main>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}