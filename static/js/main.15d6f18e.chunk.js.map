{"version":3,"sources":["components/appBar/AppBar.tsx","components/drawer/Drawer.tsx","components/main/Main.tsx","components/map/Map.tsx","components/map/layers/layers.config.ts","components/map/layers/Layer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AppBar","drawerOpen","drawerWidth","theme","handleDrawerOpen","StyledAppBar","styled","MuiAppBar","shouldForwardProp","prop","open","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","position","Toolbar","IconButton","color","aria-label","onClick","edge","sx","mr","display","Menu","Typography","variant","noWrap","component","AppDrawer","handleDrawerClose","children","DrawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","Drawer","flexShrink","boxSizing","anchor","direction","ChevronLeft","ChevronRight","Divider","List","Main","MainContent","flexGrow","MapContext","React","createContext","undefined","proj4","defs","register","LayersAvailable","FeatureTypeName","Colours","extent","MapComponent","props","mapDivRef","state","createRef","this","current","openStreetMap","TileLayer","source","OSM","zIndex","vectorLayers","push","scaleLineControl","ScaleLine","units","minWidth","bar","steps","text","overViewMapControl","OverviewMap","tipLabel","layers","mousePositionControl","MousePosition","coordinateFormat","createStringXY","projection","mapContext","map","Map","target","view","View","center","zoom","controls","defaults","attribution","extend","setState","className","ref","Provider","value","Component","colours","name","colour","red","blue","green","orange","grey","LayerComponent","handleLayerVisibility","iconColour","find","ListItem","button","ListItemIcon","Layers","LayersClear","ListItemText","primary","getFeature","typeName","getTypeNameFromLayerAvailable","layerAvailable","BAG_LIGPLAATS","LIGPLAATS","BAG_PAND","PAND","BAG_STANDPLAATS","STANDPLAATS","WOONPLAATS","createLayer","NETHERLANDS_PROVINCES","nlVectorSource","VectorSource","format","GeoJSON","url","layer","VectorLayer","visible","style","Style","stroke","Stroke","vectorSource","strategy","bboxStrategy","App","useTheme","useState","setOpen","setVectorLayers","i","length","values_","useEffect","BLACK","BAG_WOONPLAATS","BLUE","RED","GREEN","ORANGE","createAllAvailableLayers","Box","CssBaseline","Layer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15d6f18e.chunk.js","sourcesContent":["import { styled } from '@mui/material/styles';\nimport MuiAppBar from '@mui/material/AppBar';\nimport { IconButton, Toolbar, Typography } from '@mui/material';\nimport {\n  Menu as MenuIcon,\n} from '@mui/icons-material';\nimport type { AppBarProps } from './AppBar.d'\n\nconst AppBar: React.FC<AppBarProps> = ({ drawerOpen, drawerWidth, theme, handleDrawerOpen }) => {\n\n\n  const StyledAppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n  })<any>(({ theme, open, drawerWidth }) => ({\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: `${drawerWidth}px`,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    }),\n  }));\n\n  return (\n    <StyledAppBar position=\"fixed\" open={drawerOpen} drawerWidth={drawerWidth} theme={theme}>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n          sx={{ mr: 2, ...(drawerOpen && { display: 'none' }) }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap component=\"div\">\n          Cyclomedia Test\n        </Typography>\n      </Toolbar>\n    </StyledAppBar>\n  );\n};\n\nexport default AppBar;\n","import { styled } from '@mui/material/styles';\nimport {\n  Drawer,\n  IconButton,\n  Divider,\n  List,\n} from '@mui/material';\nimport {\n  ChevronLeft as ChevronLeftIcon,\n  ChevronRight as ChevronRightIcon,\n} from '@mui/icons-material';\n\nimport type { DrawerSet } from './Drawer.d';\n\nconst AppDrawer: React.FC<DrawerSet> = ({ drawerWidth, drawerOpen, handleDrawerClose, theme, children }) => {\n  \n  const DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }));\n  return (\n    <Drawer\n    sx={{\n      width: drawerWidth,\n      flexShrink: 0,\n      '& .MuiDrawer-paper': {\n        width: drawerWidth,\n        boxSizing: 'border-box',\n      },\n    }}\n    variant=\"persistent\"\n    anchor=\"left\"\n    open={drawerOpen}\n  >\n    <DrawerHeader>\n      <IconButton onClick={handleDrawerClose}>\n        {theme.direction === 'ltr' ? (\n          <ChevronLeftIcon />\n        ) : (\n          <ChevronRightIcon />\n        )}\n      </IconButton>\n    </DrawerHeader>\n    <Divider />\n    <List>\n      {children}\n    </List>\n    <Divider />\n  </Drawer>\n  );\n};\n\nexport default AppDrawer;","import { styled } from '@mui/material/styles';\nimport type { MainSet } from './Main.d';\n\n\nconst Main: React.FC<MainSet> = ({ theme, drawerOpen, drawerWidth, children }) => {\n\n  const MainContent = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n    open?: boolean; drawerWidth: number;\n  }>(({ theme, open, drawerWidth }) => ({\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: `-${drawerWidth}px`,\n    ...(open && {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    }),\n  }));\n\n  const DrawerHeader = styled('div')(({ theme }) => ({\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  }));\n\n  return (\n    <MainContent open={drawerOpen} theme={theme} drawerWidth={drawerWidth}>\n      <DrawerHeader theme={theme} />\n        {children}\n    </MainContent>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport { MapProps, MapState, IMapContext } from './Map.d';\nimport View from 'ol/View';\nimport OSM from 'ol/source/OSM';\nimport Map from 'ol/Map';\nimport {Tile as TileLayer} from 'ol/layer';\nimport 'ol/ol.css';\nimport \"./map.css\";\n\nimport proj4 from 'proj4';\nimport {register} from 'ol/proj/proj4';\n\nimport { ScaleLine, OverviewMap, defaults, MousePosition } from 'ol/control';\nimport {createStringXY} from 'ol/coordinate';\n\nexport const MapContext = React.createContext<IMapContext | void>(undefined);\n\nproj4.defs(\"EPSG:28992\",\"+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725 +units=m +no_defs\");\n\nregister(proj4);\n\nconst extent = [846.36, 268975.28, 288050.82, 636456.31];\n\nexport class MapComponent extends React.Component<MapProps, MapState> {\n  private mapDivRef: React.RefObject<HTMLDivElement>;\n  state: MapState = {};\n\n  constructor(props: MapProps) {\n    super(props);\n    this.mapDivRef = React.createRef<HTMLDivElement>();\n  }\n\n  componentDidMount() {\n    if (!this.mapDivRef.current) {\n      return;\n    }\n\n    const openStreetMap = new TileLayer({\n      source: new OSM(),\n      zIndex: 1\n    })\n\n    this.props.vectorLayers?.push(openStreetMap)\n\n    const scaleLineControl = new ScaleLine({\n      units: 'metric',\n      minWidth: 200,\n      bar: true,\n      steps: 4,\n      text: true\n    });\n  \n    const overViewMapControl = new OverviewMap({\n      tipLabel: 'Netherlands Overview Map',\n      layers: [\n        new TileLayer({\n          source: new OSM()\n        })\n      ]\n    });\n\n    const mousePositionControl = new MousePosition({\n      coordinateFormat: createStringXY(4),\n      projection: 'EPSG:28992',\n\n    });\n\n    const map = new Map({\n      layers: this.props.vectorLayers,\n      target: this.mapDivRef.current,\n      view: new View({\n        center: [142892.19, 470783.87],\n        zoom: 1,\n        projection: 'EPSG:28992',\n        extent: extent,\n      }),\n      controls: defaults({attribution: false}).extend([scaleLineControl, overViewMapControl, mousePositionControl])\n    });\n\n    const mapContext: IMapContext = { map };\n    this.setState({\n      mapContext: mapContext,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"map\" ref={this.mapDivRef}>\n        {this.state.mapContext && (\n          <MapContext.Provider value={this.state.mapContext}>\n            <div></div>\n          </MapContext.Provider>\n        )}\n      </div>\n    );\n  }\n}\n","import GeoJSON from 'ol/format/GeoJSON';\nimport VectorSource from 'ol/source/Vector';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy';\nimport {Vector as VectorLayer} from 'ol/layer';\nimport {Stroke, Style} from 'ol/style';\n\nexport enum LayersAvailable {\n  NETHERLANDS_PROVINCES = 'netherlands_provinces',\n  BAG_STANDPLAATS = 'bag_standplaats',\n  BAG_WOONPLAATS = 'bag_woonplaats',\n  BAG_PAND = 'bag_pand',\n  BAG_LIGPLAATS = 'bag_ligplaats'\n}\n\nexport enum FeatureTypeName {\n  STANDPLAATS = 'bag:standplaats',\n  WOONPLAATS = 'bag:woonplaats',\n  PAND = 'bag:pand',\n  LIGPLAATS = 'bag:ligplaats'\n}\n\nenum Colours {\n  RED = 'red',\n  BLUE = 'blue',\n  GREEN = 'green',\n  ORANGE = 'orange',\n  BLACK = 'black'\n}\n\ninterface IVectorLayer {\n  name: string;\n  colour: Colours;\n  state: boolean;\n  layer?: VectorLayer<any>;\n}\n\n\nconst getFeature = (typeName: FeatureTypeName): string => {\n  return `https://geodata.nationaalgeoregister.nl/bag/wfs/v1_1?service=WFS&request=GetFeature&typeName=${typeName}&count=100&startIndex=0&outputFormat=json&version=2.0.0`;\n}\n\nconst getTypeNameFromLayerAvailable = (layerAvailable: LayersAvailable): FeatureTypeName => {\n\n  switch (layerAvailable) {\n    case LayersAvailable.BAG_LIGPLAATS:\n      return FeatureTypeName.LIGPLAATS;\n    case LayersAvailable.BAG_PAND:\n      return FeatureTypeName.PAND;\n    case LayersAvailable.BAG_STANDPLAATS:\n      return FeatureTypeName.STANDPLAATS;\n    default:\n      return FeatureTypeName.WOONPLAATS;\n  }\n}\n\nconst createLayer = (layerAvailable: LayersAvailable, colour: Colours, width: number = 2): IVectorLayer => {\n  if(layerAvailable === LayersAvailable.NETHERLANDS_PROVINCES) {\n\n    const nlVectorSource = new VectorSource({\n      format: new GeoJSON(),\n      url: './cyclomedia/data/geojson/netherlands.geojson',\n    \n    });\n    return {\n      name: layerAvailable,\n      colour: colour,\n      state: true,\n      layer: new VectorLayer({\n        visible: true,\n        zIndex: 2,\n        source: nlVectorSource,\n        style: new Style({\n          stroke: new Stroke({\n            color: colour,\n            width: width,\n          }),\n        }),\n      })\n    };\n\n  } else {\n    const vectorSource = new VectorSource({\n      format: new GeoJSON(),\n      url: () => {\n        return (getFeature(getTypeNameFromLayerAvailable(layerAvailable)));\n      },\n      strategy: bboxStrategy,\n    });\n    \n    return {\n      name: layerAvailable,\n      colour: colour,\n      state: true,\n      layer: new VectorLayer({\n        visible: true,\n        zIndex: 9,\n        source: vectorSource,\n        style: new Style({\n          stroke: new Stroke({\n            color: colour,\n            width: width,\n          }),\n        }),\n      })\n    };\n  }\n}\n\nconst createAllAvailableLayers = (): IVectorLayer[] => {\n  const layers: IVectorLayer[] = [];\n  \n  layers.push(createLayer(LayersAvailable.NETHERLANDS_PROVINCES, Colours.BLACK));\n  layers.push(createLayer(LayersAvailable.BAG_WOONPLAATS, Colours.BLUE));\n  layers.push(createLayer(LayersAvailable.BAG_STANDPLAATS, Colours.RED));\n  layers.push(createLayer(LayersAvailable.BAG_PAND, Colours.GREEN));\n  layers.push(createLayer(LayersAvailable.BAG_LIGPLAATS, Colours.ORANGE));\n\n  return layers;\n}\n\nexport { createAllAvailableLayers };\nexport type { IVectorLayer };\n","import {\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@mui/material';\n\nimport {\n  LayersClear as LayersClearIcon,\n  Layers as LayersIcon\n} from '@mui/icons-material';\n\nimport { red, grey, green, orange, blue } from '@mui/material/colors';\n\nexport type LayerProps = {\n  name: string;\n  color: string;\n  state: boolean;\n  handleLayerVisibility: (name: string) => void;\n}\n\nconst colours = [\n  { name: 'red', colour: red['A700'] },\n  { name: 'blue', colour: blue['A700'] },\n  { name: 'green', colour: green['A700'] },\n  { name: 'orange', colour: orange['A700'] },\n  { name: 'black', colour: grey[900] }\n]\n\n\nconst LayerComponent: React.FC<LayerProps> = ({name, color, state, handleLayerVisibility}) => {\n\n  const iconColour = colours.find((colour: any) => colour.name === color)?.colour;\n\n  return (\n    <ListItem button key={name} onClick={() => handleLayerVisibility(name)}>\n      <ListItemIcon>\n      {state ? <LayersIcon sx={{ color: iconColour}} /> : <LayersClearIcon sx={{ color: iconColour}} />}\n      </ListItemIcon>\n      <ListItemText primary={name} />\n    </ListItem>\n  );\n};\n\nexport default LayerComponent;\n","import { Box, CssBaseline } from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport AppBar from './components/appBar/AppBar';\nimport AppDrawer from './components/drawer/Drawer';\nimport Main from './components/main/Main';\nimport { Map } from './components/map'\nimport LayerComponent from './components/map/layers/Layer';\nimport { createAllAvailableLayers } from './components/map/layers/layers.config';\n\nfunction App() {\n\n  const drawerWidth = 240;\n\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const [ vectorLayers, setVectorLayers ] = useState<any>([]);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleLayerVisibility = (name: string) => {\n\n    for (let i = 0; i < vectorLayers.length; i++) {\n      if(vectorLayers[i].name === name)\n        vectorLayers[i].layer.values_.visible = !vectorLayers[i].layer.values_.visible;\n    }\n    handleDrawerClose();\n  }\n\n  useEffect(() => {\n    setVectorLayers(createAllAvailableLayers());\n  }, [])\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline />\n        <AppBar drawerOpen={open} drawerWidth={drawerWidth} theme={theme} handleDrawerOpen={handleDrawerOpen}/>\n        <AppDrawer drawerOpen={open} drawerWidth={drawerWidth} theme={theme} handleDrawerClose={handleDrawerClose}>\n          {\n            vectorLayers.map((layer: any) => (\n              <LayerComponent key={layer.name} name={layer.name} color={layer.colour} state={layer.layer.values_.visible} handleLayerVisibility={handleLayerVisibility} />\n            ))\n          }\n        </AppDrawer>\n        <Main drawerOpen={open} drawerWidth={drawerWidth} theme={theme} handleDrawerClose={handleDrawerClose}>\n          <Map vectorLayers={vectorLayers.map((layer: any) => layer.layer)} controls={[]} />\n        </Main>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}